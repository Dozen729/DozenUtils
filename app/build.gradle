plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "com.dozen.utils"
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        lintOptions {
            abortOnError false
            checkReleaseBuilds false
        }
        //ARouter必要
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        flavorDimensions "default"
    }

//    packagingOptions {
//        pickFirst 'META-INF/*'
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        oppo { dimension "default" }
        huawei { dimension "default" }
        vivo { dimension "default" }
        yingyongbao { dimension "default" }
        xiaomi { dimension "default" }
        toutiao { dimension "default" }
        common { dimension "default" }
        kuaishou { dimension "default" }
        weibo { dimension "default" }
        dongfang { dimension "default" }
        befun { dimension "default" }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [APP_CHANNEL_VALUE: name]
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "dozenutils-${variant.productFlavors[0].name}-${defaultConfig.versionCode}-v${defaultConfig.versionName}-${releaseTime()}.apk"

                    outputFileName  = fileName
                }
            }
        }
    }

    signingConfigs {
        paipai {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('dozen_utils.jks')
            storePassword '123456'
        }
        debug {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('dozen_utils.jks')
            storePassword '123456'
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(path: ':commonbase')
    implementation project(path: ':login')
    implementation project(path: ':cameraview')

    // 引入multidex库，jar包太多dex太大时使用
    implementation 'com.android.support:multidex:1.0.3'

    //router
    implementation 'com.alibaba:arouter-api:1.5.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("GMT+08:00"))
}